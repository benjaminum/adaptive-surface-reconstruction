# This is a basic workflow to help you get started with Actions

name: Build artifacts

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-18.04

    strategy:
      matrix:
        configuration: [py36, py37, py38, py39, appimage]
        include:
          - configuration: py36
            python_version: 3.6
            build_python: ON
            build_appimage: OFF
          - configuration: py37
            python_version: 3.7
            build_python: ON
            build_appimage: OFF
          - configuration: py38
            python_version: 3.8
            build_python: ON
            build_appimage: OFF
          - configuration: py39
            python_version: 3.9
            build_python: ON
            build_appimage: OFF
          - configuration: appimage
            python_version: 3.9
            build_python: OFF
            build_appimage: ON

    env:
      PYTHON_VERSION: ${{ matrix.python_version }}
      BUILD_PYTHON_MODULE: ${{ matrix.build_python }}
      BUILD_APPIMAGE: ${{ matrix.build_appimage }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Build inside container
        uses: ./.github/actions/docker-action
      
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: artifact ${{ matrix.configuration }}
          path: |
            build/python/python_package/dist/a*.whl
            build/appimage/asr*.AppImage

